{"version":3,"file":"fre.mjs","sources":["../src/util.js","../src/h.js","../src/element.js","../src/hooks.js","../src/reconciler.js"],"sourcesContent":["export const arrayfy = array =>\r\n  !array ? [] : Array.isArray(array) ? array : [array]\r\n\r\nexport const isNew = (prev, next) => key => prev[key] !== next[key]\r\n\r\nexport const isSame = (a, b) => a.type == b.type && a.key == b.key\r\n\r\nexport const hashfy = arr => {\r\n  let out = {}\r\n  let i = 0\r\n  arrayfy(arr).forEach(item => {\r\n    let key = ((item || {}).props || {}).key\r\n    key ? (out['.' + key] = item) : (out['.' + i] = item) && i++\r\n  })\r\n  return out\r\n}\r\n\r\nexport const extend = (a, b) => {\r\n  for (var i in b) a[i] = b[i]\r\n}\r\n\r\nexport const merge = (a, b) => {\r\n  let out = {}\r\n\r\n  for (var i in a) out[i] = a[i]\r\n  for (var i in b) out[i] = b[i]\r\n\r\n  return out\r\n}\r\n\r\nexport const rIC =\r\n  requestIdleCallback ||\r\n  ((cb, start = Date.now()) =>\r\n    setTimeout(() => {\r\n      cb({\r\n        didTimeout: false,\r\n        timeRemaining: () => Math.max(0, 50 - (Date.now() - start))\r\n      })\r\n    }, 1))\r\n\r\nexport const rAF = requestAnimationFrame || setTimeout\r\n","import { merge } from './util'\r\nexport function h (type, props) {\r\n  let rest = []\r\n  let children = []\r\n  let length = arguments.length\r\n\r\n  while (length-- > 2) rest.push(arguments[length])\r\n  while (rest.length) {\r\n    let node = rest.pop()\r\n    if (node && node.pop) {\r\n      for (length = node.length; length--;) rest.push(node[length])\r\n    } else if (node === null || node === true || node === false) {\r\n    } else {\r\n      children.push(\r\n        typeof node !== 'object'\r\n          ? { type: 'text', props: { nodeValue: node } }\r\n          : node\r\n      )\r\n    }\r\n  }\r\n  return {\r\n    type,\r\n    props: merge(props, { children }),\r\n    key: (props || {}).key || null\r\n  }\r\n}\r\n","import { isNew } from './util'\r\n\r\nfunction updateProperty (element, name, value, newValue) {\r\n  if (name === 'children' || name === 'key') {\r\n  } else if (name === 'style') {\r\n    Object.keys(newValue).forEach(key => {\r\n      let style = !newValue || !newValue[key] ? '' : newValue[key]\r\n      element[name][key] = style\r\n    })\r\n  } else if (name[0] === 'o' && name[1] === 'n') {\r\n    name = name.slice(2).toLowerCase()\r\n    if (value) {\r\n      element.removeEventListener(name, value)\r\n    }\r\n    element.addEventListener(name, newValue)\r\n  } else {\r\n    element.setAttribute(name, newValue)\r\n  }\r\n}\r\n\r\nexport function updateElement (element, props, newProps) {\r\n  Object.keys(newProps)\r\n    .filter(isNew(props, newProps)) // 进行一层浅比较\r\n    .forEach(key => {\r\n      if (key === 'value' || key === 'nodeValue') {\r\n        element[key] = newProps[key]\r\n      } else {\r\n        updateProperty(element, key, props[key], newProps[key])\r\n      }\r\n    })\r\n}\r\n\r\nexport function createElement (fiber) {\r\n  const element =\r\n    fiber.type === 'text'\r\n      ? document.createTextNode('')\r\n      : document.createElement(fiber.type)\r\n  updateElement(element, [], fiber.props)\r\n  return element\r\n}\r\n","import { scheduleWork, getCurrentFiber } from './reconciler'\r\nlet cursor = 0\r\nlet oldInputs = []\r\nlet mounted = false\r\n\r\nfunction update (key, reducer, value) {\r\n  const current = this ? this : getCurrentFiber()\r\n  value = reducer ? reducer(current.state[key], value) : value\r\n  current.state[key] = value\r\n  scheduleWork(current)\r\n}\r\nexport function resetCursor () {\r\n  cursor = 0\r\n}\r\nexport function useState (initState) {\r\n  return useReducer(null, initState)\r\n}\r\nexport function useReducer (reducer, initState) {\r\n  let current = getCurrentFiber()\r\n  let key = '$' + cursor\r\n  let setter = update.bind(current, key, reducer)\r\n  if (!current) {\r\n    return [initState, setter]\r\n  } else {\r\n    cursor++\r\n    let state = current.state || {}\r\n    if (typeof state === 'object' && key in state) {\r\n      return [state[key], setter]\r\n    } else {\r\n      current.state[key] = initState\r\n    }\r\n    return [initState, setter]\r\n  }\r\n}\r\nexport function useEffect (effect, inputs) {\r\n  let current = getCurrentFiber()\r\n  if (current) current.effect = useMemo(effect, inputs)\r\n}\r\n\r\nexport function useMemo (create, inputs) {\r\n  return function () {\r\n    let current = getCurrentFiber()\r\n    if (current) {\r\n      let hasChaged = inputs\r\n        ? oldInputs.some((value, i) => inputs[i] !== value)\r\n        : true\r\n      if (inputs && inputs.length === 0 && !mounted) {\r\n        // 空数组只执行一次\r\n        hasChaged = true\r\n        mounted = true\r\n      }\r\n\r\n      if (hasChaged) create()\r\n      oldInputs = inputs\r\n    }\r\n  }\r\n}\r\n\r\nexport function createContext (initContext = {}) {\r\n  let context = initContext\r\n  let setters = []\r\n  const update = newContext => setters.forEach(fn => fn(newContext))\r\n\r\n  const subscribe = fn => setters.push(fn)\r\n\r\n  const unSubscribe = fn => (setters = setters.filter(f => f !== fn))\r\n\r\n  return { context, update, subscribe, unSubscribe }\r\n}\r\n\r\nexport function useContext (ctx) {\r\n  const [context, setContext] = useState(ctx.context)\r\n\r\n  ctx.subscribe(setContext)\r\n  useEffect(() => ctx.unSubscribe(setContext))\r\n\r\n  return [context, ctx.update]\r\n}\r\n","import { createElement, updateElement } from './element'\r\nimport { resetCursor } from './hooks'\r\nimport { rAF, rIC, hashfy, isSame, extend, merge } from './util'\r\n\r\nconst [HOST, HOOK, ROOT, PLACE, REPLACE, UPDATE, DELETE] = [0, 1, 2, 3, 4, 5, 6]\r\n\r\nlet updateQueue = []\r\nlet nextWork = null\r\nlet pendingCommit = null\r\nlet currentFiber = null\r\nexport let isRecycling = true\r\n\r\nexport function render (vdom, container) {\r\n  let rootFiber = {\r\n    tag: ROOT,\r\n    base: container,\r\n    props: { children: vdom }\r\n  }\r\n  updateQueue.push(rootFiber)\r\n  rIC(workLoop)\r\n}\r\n\r\nexport function scheduleWork (fiber) {\r\n  updateQueue.push(fiber)\r\n  rIC(workLoop)\r\n}\r\n\r\nfunction workLoop (deadline) {\r\n  if (!nextWork && updateQueue.length) {\r\n    const update = updateQueue.shift()\r\n    if (!update) return\r\n    nextWork = update\r\n  }\r\n  while (nextWork && deadline.timeRemaining() > 1) {\r\n    nextWork = performWork(nextWork)\r\n  }\r\n\r\n  if (nextWork || updateQueue.length > 0) rIC(workLoop)\r\n  if (pendingCommit) rAF(() => commitWork(pendingCommit))\r\n}\r\n\r\nfunction performWork (WIP) {\r\n  WIP.tag == HOOK ? updateHOOK(WIP) : updateHost(WIP)\r\n  if (WIP.child) return WIP.child\r\n  while (WIP) {\r\n    completeWork(WIP)\r\n    if (WIP.sibling) return WIP.sibling\r\n    WIP = WIP.parent\r\n  }\r\n}\r\n\r\nfunction updateHost (WIP) {\r\n  if (!WIP.base) WIP.base = createElement(WIP)\r\n  let parent = WIP.parent || {}\r\n  WIP.insertPoint = parent.oldPoint\r\n  parent.oldPoint = WIP\r\n  const newChildren = WIP.props.children\r\n  reconcileChildren(WIP, newChildren)\r\n}\r\n\r\nfunction updateHOOK (WIP) {\r\n  let instance = WIP.base\r\n  if (instance == null) {\r\n    instance = WIP.base = createInstance(WIP)\r\n  }\r\n  WIP.props = WIP.props || {}\r\n  WIP.state = WIP.state || {}\r\n  WIP.effects = WIP.effects || {}\r\n  currentFiber = WIP\r\n  resetCursor()\r\n  const newChildren = WIP.type(WIP.props)\r\n  reconcileChildren(WIP, newChildren)\r\n  currentFiber.patches = WIP.patches\r\n}\r\nfunction fiberize (children, WIP) {\r\n  return (WIP.children = hashfy(children))\r\n}\r\n\r\nfunction reconcileChildren (WIP, newChildren) {\r\n  const oldFibers = WIP.children\r\n  const newFibers = fiberize(newChildren, WIP)\r\n  let reused = {}\r\n\r\n  for (let key in oldFibers) {\r\n    let newFiber = newFibers[key]\r\n    let oldFiber = oldFibers[key]\r\n    if (newFiber && oldFiber.type === newFiber.type) {\r\n      reused[key] = oldFiber\r\n      if (newFiber.key) {\r\n        oldFiber.key = newFiber.key\r\n      }\r\n      continue\r\n    } else {\r\n      oldFiber.patchTag = DELETE\r\n      WIP.patches.push(oldFiber)\r\n    }\r\n  }\r\n\r\n  let prevFiber = null\r\n  let alternate = null\r\n\r\n  for (let key in newFibers) {\r\n    let newFiber = newFibers[key]\r\n    let oldFiber = reused[key]\r\n\r\n    if (oldFiber) {\r\n      if (isSame(oldFiber, newFiber)) {\r\n        alternate = new Fiber(oldFiber, {\r\n          patchTag: UPDATE\r\n        })\r\n\r\n        newFiber.patchTag = UPDATE\r\n        newFiber = merge(alternate, newFiber)\r\n        newFiber.alternate = alternate\r\n        if (oldFiber.key) {\r\n          newFiber.patchTag = REPLACE\r\n        }\r\n      }\r\n    } else {\r\n      newFiber = new Fiber(newFiber, {\r\n        patchTag: PLACE\r\n      })\r\n    }\r\n    newFibers[key] = newFiber\r\n    newFiber.parent = WIP\r\n\r\n    if (prevFiber) {\r\n      prevFiber.sibling = newFiber\r\n    } else {\r\n      WIP.child = newFiber\r\n    }\r\n\r\n    prevFiber = newFiber\r\n  }\r\n  if (prevFiber) prevFiber.sibling = null\r\n}\r\n\r\nfunction createInstance (fiber) {\r\n  const instance = new fiber.type(fiber.props)\r\n  instance.fiber = fiber\r\n  return instance\r\n}\r\n\r\nfunction Fiber (vnode, data) {\r\n  this.patchTag = data.patchTag\r\n  this.tag = data.tag || typeof vnode.type === 'function' ? HOOK : HOST\r\n  vnode.props = vnode.props || { nodeValue: vnode.nodeValue }\r\n  extend(this, vnode)\r\n}\r\n\r\nfunction completeWork (fiber) {\r\n  if (fiber.parent) {\r\n    fiber.parent.patches = (fiber.parent.patches || []).concat(\r\n      fiber.patches || [],\r\n      fiber.patchTag ? [fiber] : []\r\n    )\r\n  } else {\r\n    pendingCommit = fiber\r\n  }\r\n}\r\n\r\nfunction commitWork (WIP) {\r\n  WIP.patches.forEach(p => commit(p))\r\n  currentFiber.effect && currentFiber.effect()\r\n  nextWork = pendingCommit = null\r\n}\r\n\r\nfunction commit (fiber) {\r\n  if (fiber.tag == ROOT) return\r\n  let parentFiber = fiber.parent\r\n  while (parentFiber.tag == HOOK) {\r\n    parentFiber = parentFiber.parent\r\n  }\r\n  const parent = parentFiber.base\r\n  let dom = fiber.base\r\n\r\n  if (fiber.tag == HOOK) {\r\n  } else if (fiber.patchTag == UPDATE) {\r\n    updateElement(fiber.base, fiber.alternate.props, fiber.props)\r\n  } else if (fiber.patchTag == DELETE) {\r\n    deleteElement(fiber, parent)\r\n  } else {\r\n    let after = isRecycling\r\n      ? null\r\n      : fiber.insertPoint\r\n        ? fiber.patchTag == PLACE\r\n          ? fiber.insertPoint.base.nextSibling\r\n          : fiber.insertPoint.base.nextSibling || parent.firstChild\r\n        : null\r\n    if (after == dom) return\r\n    parent.insertBefore(dom, after)\r\n  }\r\n  if (dom != parent.lastChild) isRecycling = false\r\n  parentFiber.patches = fiber.patches = []\r\n}\r\n\r\nfunction deleteElement (fiber, parent) {\r\n  let node = fiber\r\n  while (true) {\r\n    if (node.tag == HOOK) {\r\n      node = node.child\r\n      continue\r\n    }\r\n    parent.removeChild(node.base)\r\n    node.patches = []\r\n    while (node != fiber && !node.sibling) node = node.parent\r\n    if (node == fiber) return\r\n    node = node.sibling\r\n  }\r\n}\r\n\r\nexport function getCurrentFiber () {\r\n  return currentFiber || null\r\n}\r\n"],"names":["const","isNew","prev","next","key","isSame","a","b","type","hashfy","arr","array","out","i","Array","isArray","forEach","item","props","extend","merge","rIC","requestIdleCallback","cb","start","Date","now","setTimeout","didTimeout","timeRemaining","Math","max","rAF","requestAnimationFrame","h","rest","children","length","arguments","push","node","pop","nodeValue","updateElement","element","newProps","Object","keys","filter","name","value","newValue","slice","toLowerCase","removeEventListener","addEventListener","setAttribute","updateProperty","let","cursor","oldInputs","mounted","useState","initState","useReducer","reducer","current","getCurrentFiber","setter","this","state","updateQueue","workLoop","bind","useEffect","effect","inputs","useMemo","create","hasChaged","some","createContext","initContext","setters","newContext","fn","f","useContext","ctx","context","subscribe","setContext","unSubscribe","update","nextWork","pendingCommit","currentFiber","isRecycling","render","vdom","container","tag","ROOT","base","deadline","shift","performWork","patches","p","fiber","parentFiber","parent","HOOK","dom","patchTag","UPDATE","alternate","DELETE","removeChild","sibling","child","deleteElement","after","insertPoint","PLACE","nextSibling","firstChild","insertBefore","lastChild","commit","WIP","instance","createInstance","effects","newChildren","reconcileChildren","updateHOOK","document","createTextNode","createElement","oldPoint","updateHost","concat","oldFibers","newFibers","fiberize","reused","newFiber","oldFiber","prevFiber","Fiber","REPLACE","vnode","data","HOST"],"mappings":"AAAOA,IAGMC,WAASC,EAAMC,mBAASC,UAAOF,EAAKE,KAASD,EAAKC,KAElDC,WAAUC,EAAGC,UAAMD,EAAEE,MAAQD,EAAEC,MAAQF,EAAEF,KAAOG,EAAEH,KAElDK,WAASC,OAPCC,EAQjBC,EAAM,GACNC,EAAI,SATaF,EAUbD,EATPC,EAAaG,MAAMC,QAAQJ,GAASA,EAAQ,CAACA,GAArC,IASIK,iBAAQC,OACfb,IAAQa,GAAQ,IAAIC,OAAS,IAAId,IACrCA,EAAOQ,EAAI,IAAMR,GAAOa,GAASL,EAAI,IAAMC,GAAKI,IAASJ,MAEpDD,GAGIO,WAAUb,EAAGC,OACnB,IAAIM,KAAKN,EAAGD,EAAEO,GAAKN,EAAEM,IAGfO,WAASd,EAAGC,OACnBK,EAAM,OAEL,IAAIC,KAAKP,EAAGM,EAAIC,GAAKP,EAAEO,OACvB,IAAIA,KAAKN,EAAGK,EAAIC,GAAKN,EAAEM,UAErBD,GAGIS,EACXC,8BACEC,EAAIC,yBAAQC,KAAKC,OACjBC,sBACEJ,EAAG,CACDK,YAAY,EACZC,gCAAqBC,KAAKC,IAAI,EAAG,IAAMN,KAAKC,MAAQF,QAErD,IAEMQ,EAAMC,uBAAyBN,WCvCrC,SAASO,EAAG1B,EAAMU,uBACnBiB,EAAO,GACPC,EAAW,GACXC,EAASC,UAAUD,OAEhBA,KAAW,GAAGF,EAAKI,KAAKD,EAAUD,SAClCF,EAAKE,QAAQ,KACdG,EAAOL,EAAKM,SACZD,GAAQA,EAAKC,QACVJ,EAASG,EAAKH,OAAQA,KAAWF,EAAKI,KAAKC,EAAKH,SACnC,OAATG,IAA0B,IAATA,IAA0B,IAATA,GAE3CJ,EAASG,KACS,iBAATC,EACH,CAAEhC,KAAM,OAAQU,MAAO,CAAEwB,UAAWF,IACpCA,SAIH,MACLhC,EACAU,MAAOE,EAAMF,EAAO,UAAEkB,IACtBhC,KAAMc,GAAS,IAAId,KAAO,MCH9B,SAAgBuC,EAAeC,EAAS1B,EAAO2B,GAC7CC,OAAOC,KAAKF,GACTG,OAAO/C,EAAMiB,EAAO2B,IACpB7B,iBAAQZ,GACK,UAARA,GAA2B,cAARA,EACrBwC,EAAQxC,GAAOyC,EAASzC,YAvBPwC,EAASK,EAAMC,EAAOC,GAChC,aAATF,GAAgC,QAATA,IACP,UAATA,EACTH,OAAOC,KAAKI,GAAUnC,iBAAQZ,GAE5BwC,EAAQK,GAAM7C,GADD+C,GAAaA,EAAS/C,GAAY+C,EAAS/C,GAAd,KAGvB,MAAZ6C,EAAK,IAA0B,MAAZA,EAAK,IACjCA,EAAOA,EAAKG,MAAM,GAAGC,cACjBH,GACFN,EAAQU,oBAAoBL,EAAMC,GAEpCN,EAAQW,iBAAiBN,EAAME,IAE/BP,EAAQY,aAAaP,EAAME,IAWvBM,CAAeb,EAASxC,EAAKc,EAAMd,GAAMyC,EAASzC,MC1B1DsD,IAAIC,EAAS,EACTC,EAAY,GACZC,GAAU,EAWP,SAASC,EAAUC,UACjBC,EAAW,KAAMD,GAEnB,SAASC,EAAYC,EAASF,OAC/BG,EAAUC,IACV/D,EAAM,IAAMuD,EACZS,EAfN,SAAiBhE,EAAK6D,EAASf,OACvBgB,EAAUG,KAAOA,KAAOF,IAC9BjB,EAAQe,EAAUA,EAAQC,EAAQI,MAAMlE,GAAM8C,GAASA,EACvDgB,EAAQI,MAAMlE,GAAO8C,ECerBqB,EAAYhC,KDdC2B,GCeb7C,EAAImD,IDJgBC,KAAKP,EAAS9D,EAAK6D,MAClCC,EAEE,CACLP,QACIW,EAAQJ,EAAQI,OAAS,SACR,iBAAVA,GAAsBlE,KAAOkE,EAC/B,CAACA,EAAMlE,GAAMgE,IAEpBF,EAAQI,MAAMlE,GAAO2D,EAEhB,CAACA,EAAWK,UATZ,CAACL,EAAWK,GAYhB,SAASM,EAAWC,EAAQC,OAC7BV,EAAUC,IACVD,IAASA,EAAQS,OAASE,EAAQF,EAAQC,IAGzC,SAASC,EAASC,EAAQF,UACxB,cACST,IACD,KACPY,GAAYH,GACZhB,EAAUoB,cAAM9B,EAAOrC,UAAM+D,EAAO/D,KAAOqC,IAE3C0B,GAA4B,IAAlBA,EAAOvC,SAAiBwB,IAEpCkB,GAAY,EACZlB,GAAU,GAGRkB,GAAWD,IACflB,EAAYgB,IAKX,SAASK,EAAeC,kBAAc,QAEvCC,EAAU,SAOP,SAROD,kBAECE,UAAcD,EAAQnE,iBAAQqE,UAAMA,EAAGD,yBAEpCC,UAAMF,EAAQ5C,KAAK8C,yBAEjBA,UAAOF,EAAUA,EAAQnC,gBAAOsC,UAAKA,IAAMD,MAK1D,SAASE,EAAYC,SACI1B,EAAS0B,EAAIC,8BAE3CD,EAAIE,UAAUC,GACdjB,oBAAgBc,EAAII,YAAYD,KAEzB,CAACF,EAASD,EAAIK,QCxEvB,MAA2D,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,oDAE1EtB,EAAc,GACduB,EAAW,KACXC,EAAgB,KAChBC,EAAe,KACRC,GAAc,EAElB,SAASC,EAAQC,EAAMC,GAM5B7B,EAAYhC,KALI,CACd8D,IAAKC,EACLC,KAAMH,EACNlF,MAAO,CAAEkB,SAAU+D,KAGrB9E,EAAImD,GAQN,SAASA,EAAUgC,OACZV,GAAYvB,EAAYlC,OAAQ,KAC7BwD,EAAStB,EAAYkC,YACtBZ,EAAQ,OACbC,EAAWD,OAENC,GAAYU,EAAS3E,gBAAkB,GAC5CiE,EAAWY,EAAYZ,IAGrBA,GAAYvB,EAAYlC,OAAS,IAAGhB,EAAImD,GACxCuB,GAAe/D,oBAAqB+D,EA4HpCY,QAAQ3F,iBAAQ4F,UAKtB,SAAiBC,MACXA,EAAMR,KAAOC,WACbQ,EAAcD,EAAME,OACjBD,EAAYT,KAAOW,GACxBF,EAAcA,EAAYC,WAEtBA,EAASD,EAAYP,KACvBU,EAAMJ,EAAMN,QAEZM,EAAMR,KAAOW,QACV,GAAIH,EAAMK,UAAYC,EAC3BxE,EAAckE,EAAMN,KAAMM,EAAMO,UAAUlG,MAAO2F,EAAM3F,YAClD,GAAI2F,EAAMK,UAAYG,GAiB/B,SAAwBR,EAAOE,WACzBvE,EAAOqE,OAELrE,EAAK6D,KAAOW,OAIhBD,EAAOO,YAAY9E,EAAK+D,MACxB/D,EAAKmE,QAAU,GACRnE,GAAQqE,IAAUrE,EAAK+E,SAAS/E,EAAOA,EAAKuE,UAC/CvE,GAAQqE,EAAO,OACnBrE,EAAOA,EAAK+E,aAPV/E,EAAOA,EAAKgF,MApBdC,CAAcZ,EAAOE,OAChB,KACDW,EAAQzB,EACR,KACAY,EAAMc,YACJd,EAAMK,UAAYU,EAChBf,EAAMc,YAAYpB,KAAKsB,YACvBhB,EAAMc,YAAYpB,KAAKsB,aAAed,EAAOe,WAC/C,QACFJ,GAAST,EAAK,OAClBF,EAAOgB,aAAad,EAAKS,GAEvBT,GAAOF,EAAOiB,YAAW/B,GAAc,GAC3Ca,EAAYH,QAAUE,EAAMF,QAAU,IA/BbsB,CAAOrB,KAChCZ,EAAarB,QAAUqB,EAAarB,cACpCmB,EAAWC,EAAgB,QA3H7B,SAASW,EAAawB,MACpBA,EAAI7B,KAAOW,EAkBb,SAAqBkB,OACfC,EAAWD,EAAI3B,KACH,MAAZ4B,IACFA,EAAWD,EAAI3B,KA0EnB,SAAyBM,OACjBsB,EAAW,IAAItB,EAAMrG,KAAKqG,EAAM3F,cACtCiH,EAAStB,MAAQA,EACVsB,EA7EiBC,CAAeF,IAEvCA,EAAIhH,MAAQgH,EAAIhH,OAAS,GACzBgH,EAAI5D,MAAQ4D,EAAI5D,OAAS,GACzB4D,EAAIG,QAAUH,EAAIG,SAAW,GAC7BrC,EAAekC,EDxDfvE,EAAS,MC0DH2E,EAAcJ,EAAI1H,KAAK0H,EAAIhH,OACjCqH,EAAkBL,EAAKI,GACvBtC,EAAaW,QAAUuB,EAAIvB,QA9BT6B,CAAWN,GAS/B,SAAqBA,GFnBd,IAAwBrB,EACvBjE,EEmBDsF,EAAI3B,OAAM2B,EAAI3B,MFfnB5D,EAJMC,EACW,UAFYiE,EEoBWqB,GFlBhC1H,KACFiI,SAASC,eAAe,IACxBD,SAASE,cAAc9B,EAAMrG,MACZ,GAAIqG,EAAM3F,OAC1B0B,QEeHmE,EAASmB,EAAInB,QAAU,GAC3BmB,EAAIP,YAAcZ,EAAO6B,SACzB7B,EAAO6B,SAAWV,EAElBK,EAAkBL,EADEA,EAAIhH,MAAMkB,UAdMyG,CAAWX,GAC3CA,EAAIV,MAAO,OAAOU,EAAIV,WACnBU,GAAK,KA0GSrB,EAzGNqB,GA0GLnB,OACRF,EAAME,OAAOJ,SAAWE,EAAME,OAAOJ,SAAW,IAAImC,OAClDjC,EAAMF,SAAW,GACjBE,EAAMK,SAAW,CAACL,GAAS,IAG7Bd,EAAgBc,EA/GZqB,EAAIX,QAAS,OAAOW,EAAIX,QAC5BW,EAAMA,EAAInB,OAuGd,IAAuBF,EAxEvB,SAAS0B,EAAmBL,EAAKI,OACzBS,EAAYb,EAAI9F,SAChB4G,EANR,SAAmB5G,EAAU8F,UACnBA,EAAI9F,SAAW3B,EAKI6H,GAATW,CAASX,EAAaJ,GACpCgB,EAAS,OAERxF,IAAItD,KAAO2I,EAAW,KACrBI,EAAWH,EAAU5I,GACrBgJ,EAAWL,EAAU3I,GACrB+I,GAAYC,EAAS5I,OAAS2I,EAAS3I,MACzC0I,EAAO9I,GAAOgJ,EACVD,EAAS/I,MACXgJ,EAAShJ,IAAM+I,EAAS/I,OAI1BgJ,EAASlC,SAAWG,EACpBa,EAAIvB,QAAQpE,KAAK6G,QAIjBC,EAAY,KACZjC,EAAY,SAEX1D,IAAItD,KAAO4I,EAAW,KACrBG,EAAWH,EAAU5I,GACrBgJ,EAAWF,EAAO9I,GAElBgJ,EACE/I,EAAO+I,EAAUD,KACnB/B,EAAY,IAAIkC,EAAMF,EAAU,CAC9BlC,SAAUC,IAGZgC,EAASjC,SAAWC,GACpBgC,EAAW/H,EAAMgG,EAAW+B,IACnB/B,UAAYA,EACjBgC,EAAShJ,MACX+I,EAASjC,SAAWqC,IAIxBJ,EAAW,IAAIG,EAAMH,EAAU,CAC7BjC,SAAUU,IAGdoB,EAAU5I,GAAO+I,EACjBA,EAASpC,OAASmB,EAEdmB,EACFA,EAAU9B,QAAU4B,EAEpBjB,EAAIV,MAAQ2B,EAGdE,EAAYF,EAEVE,IAAWA,EAAU9B,QAAU,MASrC,SAAS+B,EAAOE,EAAOC,QAChBvC,SAAWuC,EAAKvC,cAChBb,IAAMoD,EAAKpD,KAA6B,mBAAfmD,EAAMhJ,KAAsBwG,EAAO0C,EACjEF,EAAMtI,MAAQsI,EAAMtI,OAAS,CAAEwB,UAAW8G,EAAM9G,WAChDvB,EAAOkD,KAAMmF,GAgEf,SAAgBrF,WACP6B,GAAgB"}