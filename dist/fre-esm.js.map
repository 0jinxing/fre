{"version":3,"file":"fre-esm.js","sources":["../src/h.js","../src/dom.js","../src/hooks.js","../src/heapify.js","../src/scheduler.js","../src/reconciler.js"],"sourcesContent":["export function h (type, attrs) {\n  let props = attrs || {}\n  let key = props.key || null\n  let children = []\n\n  for (let i = 2; i < arguments.length; i++) {\n    let vnode = arguments[i]\n    if (vnode == null || vnode === true || vnode === false) {\n    } else if (typeof vnode === 'number' || typeof vnode === 'string') {\n      children.push({ type: 'text', props: { nodeValue: vnode } })\n    } else {\n      children.push(vnode)\n    }\n  }\n\n  if (children.length) {\n    props.children = children.length === 1 ? children[0] : children\n  }\n\n  delete props.key\n  return { type, props, key }\n}\n","import { SVG } from './reconciler'\n\nfunction updateProperty (dom, name, value, newValue) {\n  if (name === 'style') {\n    for (let key in value) if (!newValue[key]) dom[name][key] = ''\n    for (let key in newValue) dom[name][key] = newValue[key]\n  } else if (name[0] === 'o' && name[1] === 'n') {\n    name = name.slice(2).toLowerCase()\n    if (value) dom.removeEventListener(name, value)\n    dom.addEventListener(name, newValue)\n  } else if (name in dom && !(dom instanceof SVGElement)) {\n    dom[name] = newValue == null ? '' : newValue\n  } else if (newValue == null || newValue === false) {\n    dom.removeAttribute(name)\n  } else {\n    dom.setAttribute(name, newValue)\n  }\n}\n\nexport function updateElement (dom, props, newProps) {\n  Object.keys(newProps)\n    .filter(isNew(props, newProps))\n    .forEach(key => updateProperty(dom, key, props[key], newProps[key]))\n}\n\nexport function createElement (fiber) {\n  const dom =\n    fiber.type === 'text'\n      ? document.createTextNode('')\n      : fiber.tag === SVG\n        ? document.createElementNS('http://www.w3.org/2000/svg', fiber.type)\n        : document.createElement(fiber.type)\n  updateElement(dom, [], fiber.props)\n  return dom\n}\n\nconst isNew = (o, n) => k => k !== 'children' && o[k] !== n[k]","import { scheduleWork, getWIP } from './reconciler'\nlet cursor = 0\n\nfunction update (key, reducer, value) {\n  const current = this ? this : getWIP()\n  value = reducer ? reducer(current.state[key], value) : value\n  current.state[key] = value\n  scheduleWork(current)\n}\nexport function resetCursor () {\n  cursor = 0\n}\nexport function useState (initState) {\n  return useReducer(null, initState)\n}\nexport function useReducer (reducer, initState) {\n  let current = getWIP() || {}\n  let key = '$' + cursor\n  let setter = update.bind(current, key, reducer)\n  cursor++\n  let state = current.state || {}\n  if (key in state) {\n    return [state[key], setter]\n  } else {\n    current.state[key] = initState\n    return [initState, setter]\n  }\n}\n\nexport function useEffect (cb, inputs) {\n  let current = getWIP() || {}\n  let key = '$' + cursor\n  current.effect = current.effects || {}\n  current.effect[key] = useCallback(cb, inputs)\n  cursor++\n}\n\nexport function useCallback (cb, inputs) {\n  return useMemo(() => cb, inputs)\n}\n\nexport function useMemo (cb, inputs) {\n  let current = getWIP() || {}\n  let isChange = inputs\n    ? (current.oldInputs || []).some((v, i) => inputs[i] !== v)\n    : true\n  if (inputs && !inputs.length && !current.isMounted) {\n    isChange = true\n    current.isMounted = true\n  }\n  current.oldInputs = inputs\n\n  return isChange || !current.isMounted ? (current.memo = cb()) : current.memo\n}\n","function push (heap, node) {\r\n  let index = heap.length\r\n  heap.push(node)\r\n\r\n  while (true) {\r\n    let parentIndex = Math.floor((index - 1) / 2)\r\n    let parent = heap[parentIndex]\r\n\r\n    if (parent && compare(parent, node) > 0) {\r\n      heap[parentIndex] = node\r\n      heap[index] = parent\r\n      index = parentIndex\r\n    } else return\r\n  }\r\n}\r\n\r\nfunction pop (heap) {\r\n  let first = heap[0]\r\n  if (first) {\r\n    let last = heap.pop()\r\n    if (first !== last) {\r\n      heap[0] = last\r\n      let index = 0\r\n      let length = heap.length\r\n\r\n      while (index < length) {\r\n        let leftIndex = (index + 1) * 2 - 1\r\n        let left = heap[leftIndex]\r\n        let rightIndex = leftIndex + 1\r\n        let right = heap[rightIndex]\r\n\r\n        if (left && compare(left, last) < 0) {\r\n          if (right && compare(right, left) < 0) {\r\n            heap[index] = right\r\n            heap[rightIndex] = last\r\n            index = rightIndex\r\n          } else {\r\n            heap[index] = left\r\n            heap[leftIndex] = last\r\n            index = leftIndex\r\n          }\r\n        } else if (right && compare(right, last) < 0) {\r\n          heap[index] = right\r\n          heap[rightIndex] = last\r\n          index = rightIndex\r\n        } else return\r\n      }\r\n    }\r\n    return first\r\n  } else return null\r\n}\r\n\r\nfunction compare (a, b) {\r\n  return a.dueTime - b.dueTime\r\n}\r\n\r\nfunction peek (heap) {\r\n  return heap[0] || null\r\n}\r\n\r\nexport { push, peek, pop }\r\n","import { push, pop, peek } from './heapify'\n\nlet taskQueue = []\nlet currentTask = null\nlet currentCallback = null\nlet inMC = false\nlet frameLength = 5\nlet frameDeadline = 0\n\nexport function scheduleCallback (callback) {\n  const currentTime = getTime()\n  let startTime = currentTime\n  let timeout = 5000 // idle\n  let dueTime = startTime + timeout\n\n  let newTask = {\n    callback,\n    startTime,\n    dueTime\n  }\n\n  push(taskQueue, newTask)\n\n  requestHostCallback(flushWork)\n\n  return newTask\n}\nfunction requestHostCallback (cb) {\n  currentCallback = cb\n  if (!inMC) {\n    inMC = true\n    planWork()\n  }\n}\nfunction flushWork (iniTime) {\n  try {\n    return workLoop(iniTime)\n  } finally {\n    currentTask = null\n  }\n}\n\nfunction workLoop (iniTime) {\n  let currentTime = iniTime\n  currentTask = peek(taskQueue)\n\n  while (currentTask) {\n    if (currentTask.dueTime > currentTime && shouldYeild()) break\n    let callback = currentTask.callback\n    if (callback) {\n      currentTask.callback = null\n      let next = callback()\n      if (next) {\n        currentTask.callback = next\n      } else {\n        if (currentTask === peek(taskQueue)) {\n          pop(taskQueue)\n        }\n      }\n    } else pop(taskQueue)\n    currentTask = peek(taskQueue)\n  }\n\n  return !!currentTask\n}\n\nfunction performWork () {\n  if (currentCallback) {\n    let currentTime = getTime()\n    frameDeadline = currentTime + frameLength\n    let moreWork = currentCallback(currentTime)\n    if (!moreWork) {\n      inMC = false\n      currentCallback = null\n    } else {\n      planWork()\n    }\n  } else inMC = false\n}\n\nconst planWork = (() => {\n  if (typeof MessageChannel !== \"undefined\") {\n    const channel = new MessageChannel()\n    const port = channel.port2\n    channel.port1.onmessage = performWork\n\n    return () => port.postMessage(null)\n  }\n\n  return () => setTimeout(performWork, 0)\n})()\n\nexport function shouldYeild () {\n  return getTime() > frameDeadline\n}\n\nconst getTime = () => performance.now()","import { createElement, updateElement } from './dom'\r\nimport { resetCursor } from './hooks'\r\nimport { scheduleCallback, shouldYeild } from './scheduler'\r\n\r\nconst options = {}\r\nexport const [HOST, HOOK, ROOT, SVG, PLACE, UPDATE, DELETE] = [0, 1, 2, 3, 4, 5, 6]\r\n\r\nlet nextWork = null\r\nlet pendingCommit = null\r\nlet currentFiber = null\r\n\r\nfunction render (vnode, node, done) {\r\n  let rootFiber = {\r\n    tag: ROOT,\r\n    node,\r\n    props: { children: vnode },\r\n    done\r\n  }\r\n  scheduleWork(rootFiber)\r\n}\r\n\r\nfunction scheduleWork (fiber) {\r\n  nextWork = fiber\r\n  scheduleCallback(performWork)\r\n}\r\n\r\nfunction performWork () {\r\n  while (nextWork && !shouldYeild()) {\r\n    nextWork = performNext(nextWork)\r\n  }\r\n\r\n  if (pendingCommit) {\r\n    options.commitWork\r\n      ? options.commitWork(pendingCommit)\r\n      : commitWork(pendingCommit)\r\n    return null\r\n  }\r\n\r\n  return performWork.bind(null)\r\n}\r\n\r\nfunction performNext (WIP) {\r\n  WIP.parentNode = getParentNode(WIP)\r\n  WIP.patches = []\r\n  WIP.tag == HOOK ? updateHOOK(WIP) : updateHost(WIP)\r\n  if (WIP.child) return WIP.child\r\n  while (WIP) {\r\n    completeWork(WIP)\r\n    if (WIP.sibling) return WIP.sibling\r\n    WIP = WIP.parent\r\n  }\r\n}\r\n\r\nfunction updateHost (WIP) {\r\n  if (!options.end && !WIP.node) {\r\n    if (WIP.type === 'svg') WIP.tag = SVG\r\n    WIP.node = createElement(WIP)\r\n  }\r\n  let p = WIP.parentNode || {}\r\n  WIP.insertPoint = p.lastFiber || null\r\n  p.lastFiber = WIP\r\n  WIP.node.lastFiber = null\r\n  reconcileChildren(WIP, WIP.props.children)\r\n}\r\n\r\nfunction getParentNode (fiber) {\r\n  let parent = fiber.parent\r\n  if (!parent) return fiber.node\r\n  while (parent.tag === HOOK) parent = parent.parent\r\n  return parent.node\r\n}\r\n\r\nfunction updateHOOK (WIP) {\r\n  WIP.props = WIP.props || {}\r\n  WIP.state = WIP.state || {}\r\n  currentFiber = WIP\r\n  resetCursor()\r\n  reconcileChildren(WIP, WIP.type(WIP.props))\r\n}\r\n\r\nfunction reconcileChildren (WIP, children) {\r\n  const oldFibers = WIP.kids\r\n  const newFibers = (WIP.kids = hashfy(children, WIP.kids))\r\n  let reused = {}\r\n\r\n  for (const k in oldFibers) {\r\n    let newFiber = newFibers[k]\r\n    let oldFiber = oldFibers[k]\r\n\r\n    if (newFiber && newFiber.type === oldFiber.type) {\r\n      reused[k] = oldFiber\r\n    } else {\r\n      oldFiber.patchTag = DELETE\r\n      WIP.patches.push(oldFiber)\r\n    }\r\n  }\r\n\r\n  let prevFiber = null\r\n  let alternate = null\r\n\r\n  for (const k in newFibers) {\r\n    let newFiber = newFibers[k]\r\n    let oldFiber = reused[k]\r\n\r\n    if (oldFiber) {\r\n      alternate = createFiber(oldFiber, { patchTag: UPDATE })\r\n      if (!options.end) newFiber.patchTag = UPDATE\r\n      newFiber = merge(alternate, newFiber)\r\n      newFiber.alternate = alternate\r\n      replace(newFiber)\r\n    } else {\r\n      newFiber = createFiber(newFiber, { patchTag: PLACE })\r\n    }\r\n\r\n    newFibers[k] = newFiber\r\n    newFiber.parent = WIP\r\n\r\n    if (prevFiber) {\r\n      prevFiber.sibling = newFiber\r\n    } else {\r\n      if (WIP.tag === SVG) newFiber.tag = SVG\r\n      WIP.child = newFiber\r\n    }\r\n    prevFiber = newFiber\r\n  }\r\n  if (prevFiber) prevFiber.sibling = null\r\n}\r\n\r\nfunction replace (fiber) {\r\n  let parent = fiber.parent\r\n  if (parent.tag == HOOK && parent.key) fiber.key = parent.key\r\n  if (fiber.key) fiber.patchTag = PLACE\r\n}\r\n\r\nfunction createFiber (vnode, data) {\r\n  data.tag = typeof vnode.type === 'function' ? HOOK : HOST\r\n  return merge(vnode, data)\r\n}\r\n\r\nfunction completeWork (fiber) {\r\n  if (!options.end && fiber.parent) {\r\n    fiber.parent.patches = (fiber.parent.patches || []).concat(\r\n      fiber.patches || [],\r\n      fiber.patchTag ? [fiber] : []\r\n    )\r\n  } else {\r\n    pendingCommit = fiber\r\n  }\r\n}\r\n\r\nfunction commitWork (WIP) {\r\n  WIP.patches.forEach(p => {\r\n    p.parent.patches = p.patches = null\r\n    commit(p)\r\n    traverse(p.effect)\r\n  })\r\n  WIP.done && WIP.done()\r\n  nextWork = pendingCommit = null\r\n}\r\n\r\nfunction traverse (fns) {\r\n  for (const k in fns) {\r\n    const fn = fns[k]\r\n    fn()\r\n  }\r\n}\r\nfunction commit (fiber) {\r\n  let parent = fiber.parentNode\r\n  let dom = fiber.node\r\n  while (!dom) dom = fiber.child.node\r\n  switch (fiber.patchTag) {\r\n    case UPDATE:\r\n      updateElement(dom, fiber.alternate.props, fiber.props)\r\n      break\r\n    case DELETE:\r\n      console.log(parent,dom)\r\n      parent.removeChild(dom)\r\n      break\r\n    default:\r\n      let point = fiber.insertPoint ? fiber.insertPoint.node : null\r\n      let after = point ? point.nextSibling : parent.firstChild\r\n      if (after === dom || fiber.tag === HOOK) return\r\n      if (after === null && dom === parent.lastChild) return\r\n      parent.insertBefore(dom, after)\r\n      break\r\n  }\r\n}\r\n\r\nfunction getWIP () {\r\n  return currentFiber || null\r\n}\r\n\r\nconst arrayfy = arr => (!arr ? [] : arr.pop ? arr : [arr])\r\n\r\nfunction hashfy (arr) {\r\n  let out = {}\r\n  let i = 0\r\n  let j = 0\r\n  arrayfy(arr).forEach(item => {\r\n    if (item.pop) {\r\n      item.forEach(item => {\r\n        let key = item.key\r\n        key\r\n          ? (out['.' + i + '.' + key] = item)\r\n          : (out['.' + i + '.' + j] = item) && j++\r\n      })\r\n      i++\r\n    } else (out['.' + i] = item) && i++\r\n  })\r\n  return out\r\n}\r\n\r\nfunction merge (a, b) {\r\n  let out = {}\r\n  for (const i in a) out[i] = a[i]\r\n  for (const i in b) out[i] = b[i]\r\n  return out\r\n}\r\n\r\nexport { render, scheduleWork, getWIP, options }\r\n"],"names":["performWork"],"mappings":"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"}